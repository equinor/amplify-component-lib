name: "Tests"

on:
  workflow_call:
jobs:
  tests:
    runs-on: ubuntu-latest
    outputs:
      tests_failed: ${{ steps.set_failed.outputs.tests_failed }}
      coverage_failed: ${{ steps.set_coverage.outputs.coverage_failed }}

    steps:
      - uses: actions/checkout@v4

      - name: Use bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install playwright with dependencies
        run: bunx playwright install --with-deps chromium

      - name: Tests
        run: bun run test:ci -- --coverage --coverage.reporter=json --coverage.reporter=json-summary --silent --watch false --reporter=json --reporter=default --outputFile.json=./testrun.json
        continue-on-error: true
        id: tests

      - name: Set coverage_failed
        id: set_coverage
        run: |
          echo "coverage_failed=${{ contains(join(steps.tests.outputs, '\n'), 'does not meet') }}" >> $GITHUB_OUTPUT

      - name: Set tests_failed
        id: set_failed
        run: |
          echo "tests_failed=$(grep -q 'numFailedTests\":0' ./testrun.json && echo 'false' || echo 'true')" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Cache coverage report
        with:
          path: ./coverage
          key: coverage


  check-test:
    runs-on: ubuntu-latest
    needs: [tests]

    steps:
      - name: Check if tests failed
        if: ${{ contains(needs.tests.outputs.tests_failed, 'true')}}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Tests failed!')

  check-coverage:
    runs-on: ubuntu-latest
    needs: [tests]

    steps:
      - name: Check if coverage failed
        if: ${{ contains(needs.tests.outputs.coverage_failed, 'true')}}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Coverage failed!')

  report-coverage:
    runs-on: ubuntu-latest
    needs: [tests]

    permissions:
      # Required to checkout the code
      contents: read
      # Required to put a comment into the pull-request
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        name: Get coverage report
        with:
          path: ./coverage
          key: coverage

      - name: Report Coverage
        # Set if: always() to also generate the report if tests are failing
        # Only works if you set `reportOnFailure: true` in your vite config as specified above
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
